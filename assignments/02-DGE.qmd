---
title: "Differential Gene Expression"
subtitle: "Can we cross the volcano?"

format:
  html:
    code-fold: false
    code-tools: true
    code-copy: true
    highlight-style: github
    code-overflow: wrap
---

For this assignment you will be taking RNA-seq reads off the sequencer, and determing what genes are expressed higher in treament group A compared to treatments group B. Why would someone want to do this? This can tell you something about the physiological response to a "treatment", which generally speaking could be anything from environment, disease, developmental stage, tissue, species...

As apposed to last week these files will be a little larger and compute effort will increase. It is good to pause here and decide what platform(s) you might want to use for this assignment.

## Data

|               |          |
|---------------|----------|
| Sample        | SampleID |
| D-control     | D54      |
| D-control     | D55      |
| D-control     | D56      |
| D-control     | D57      |
| D-control     | D58      |
| D-control     | D59      |
| D-control     | M45      |
| D-control     | M46      |
| D-control     | M48      |
| D-control     | M49      |
| D-control     | M89      |
| D-control     | M90      |
| D-desiccation | N48      |
| D-desiccation | N49      |
| D-desiccation | N50      |
| D-desiccation | N51      |
| D-desiccation | N52      |
| D-desiccation | N53      |
| D-desiccation | N54      |
| D-desiccation | N55      |
| D-desiccation | N56      |
| D-desiccation | N57      |
| D-desiccation | N58      |
| D-desiccation | N59      |

``` bash
wget --recursive --no-parent --no-directories --accept '[DMN]*001.fastq.gz' https://owl.fish.washington.edu/nightingales/C_gigas/
```

# Software

For this assignment we will be using [kallisto](https://pachterlab.github.io/kallisto/) (bash), DESeq2 (r).

If you are loaded up with kallisto and ready to go you can skip the next few steps as I will demonstrate how to install kallisto on JupyterHub.

# Installing kallisto

::: callout-note
## Just for reference if using raven for assignment (recommended).
:::

Navigate through to a terminal and create directory in your home directory named `programs`

``` bash
jovyan@jupyter-sr320:~$ pwd
/home/jovyan
jovyan@jupyter-sr320:~$ mkdir programs
```

Grab (`wget`) the program from site listed above.

``` bash
jovyan@jupyter-sr320:~$ cd programs/
jovyan@jupyter-sr320:~/programs$ wget https://github.com/pachterlab/kallisto/releases/download/v0.46.1/kallisto_linux-v0.46.1.tar.gz
```

Uncompress the file.

``` bash
jovyan@jupyter-sr320:~/programs$ cd kallisto
jovyan@jupyter-sr320:~/programs/kallisto$ ls
kallisto  license.txt  README.md  test
jovyan@jupyter-sr320:~/programs/kallisto$ ./kallisto 
kallisto 0.46.1

Usage: kallisto <CMD> [arguments] ..

Where <CMD> can be one of:

    index         Builds a kallisto index 
    quant         Runs the quantification algorithm 
    bus           Generate BUS files for single-cell data 
    pseudo        Runs the pseudoalignment step 
    merge         Merges several batch runs 
    h5dump        Converts HDF5-formatted results to plaintext
    inspect       Inspects and gives information about an index
    version       Prints version information
    cite          Prints citation information

Running kallisto <CMD> without arguments prints usage information for <CMD>
```

# Running kallisto

kallisto is already installed on raven (`/home/shared/kallisto/kallisto`).

::: callout-warning
## GitHub file size limit

Commit early and often but `ignore` files that are larger that 100 MB (or you will likely lose everything since prior commit).

You can use Git's built-in hooks to automatically ignore files larger than 100 MB. Here are the steps to follow:

Create a new file in the `.git/hooks/` directory of your repository called `pre-commit`.

Add the following code to the `pre-commit` file:

```
#!/bin/bash

# Maximum file size (in bytes)
max_file_size=104857600

# Find all files larger than max_file_size and add them to the .gitignore file
find . -type f -size +$max_file_sizec -exec echo "{}" >> .gitignore \;
```

This code sets the max_file_size variable to 100 MB and then uses the find command to locate all files in the repository that are larger than the specified max_file_size. The exec option of the find command appends the name of each file that matches the criteria to the .gitignore file.

Save the pre-commit file and make it executable by running the following command:

```bash
chmod +x .git/hooks/pre-commit
```
With these changes, whenever you run a git commit command, Git will first execute the pre-commit hook, which will automatically add any files larger than 100 MB to the .gitignore file. This will prevent Git from tracking these files in the repository going forward.

:::



In appropriate Rmarkdown

``` {{bash}}
/home/shared/kallisto/kallisto
```

## Downloading reference

``` {{bash}}
cd ../data
curl -O 
```

::: callout-note
Creating index can take some time
:::

``` {{bash}}
/home/shared/kallisto/kallisto \
index -i \
../data/cgigas_roslin_rna.index \
../data/rna.fna
```

## Downloading sequence reads



``` {{bash}}
find ../data/*fastq.gz \
| xargs basename -s _L001_R1_001.fastq.gz | xargs -I{} /home/shared/kallisto/kallisto \
quant -i ../data/cgigas_roslin_rna.index \
-o ../output/kallisto_01/{} \
-t 40 \
--single -l 100 -s 10 ../data/{}_L001_R1_001.fastq.gz
```

``` {{bash}}
perl /home/shared/trinityrnaseq-v2.12.0/util/abundance_estimates_to_matrix.pl \
--est_method kallisto \
    --gene_trans_map none \
    --out_prefix ../output/kallisto_01 \
    --name_sample_by_basedir \
    ../output/kallisto_01/control/D54_S145/abundance.tsv \
    ../output/kallisto_01/control/D56_S136/abundance.tsv \
    ../output/kallisto_01/control/D58_S144/abundance.tsv \
    ../output/kallisto_01/control/M45_S140/abundance.tsv \
    ../output/kallisto_01/control/M48_S137/abundance.tsv \
    ../output/kallisto_01/control/M89_S138/abundance.tsv \
    ../output/kallisto_01/control/D55_S146/abundance.tsv \
    ../output/kallisto_01/control/D57_S143/abundance.tsv \
    ../output/kallisto_01/control/D59_S142/abundance.tsv \
    ../output/kallisto_01/control/M46_S141/abundance.tsv \
    ../output/kallisto_01/control/M49_S139/abundance.tsv \
    ../output/kallisto_01/control/M90_S147/abundance.tsv \
    ../output/kallisto_01/dessication/N48_S194/abundance.tsv \
    ../output/kallisto_01/dessication/N50_S187/abundance.tsv \
    ../output/kallisto_01/dessication/N52_S184/abundance.tsv \
    ../output/kallisto_01/dessication/N54_S193/abundance.tsv \
    ../output/kallisto_01/dessication/N56_S192/abundance.tsv \
    ../output/kallisto_01/dessication/N58_S195/abundance.tsv \
    ../output/kallisto_01/dessication/N49_S185/abundance.tsv \
    ../output/kallisto_01/dessication/N51_S186/abundance.tsv \
    ../output/kallisto_01/dessication/N53_S188/abundance.tsv \
    ../output/kallisto_01/dessication/N55_S190/abundance.tsv \
    ../output/kallisto_01/dessication/N57_S191/abundance.tsv \
    ../output/kallisto_01/dessication/N59_S189/abundance.tsv
```



# Running DESeq2

Load packages:    
```{{r}}
library(DESeq2)
library(tidyverse)
library(pheatmap)
library(RColorBrewer)
library(data.table)
```


### Read in count matrix 

```{{r}}
countmatrix <- read.delim("../output/kallisto_01.isoform.counts.matrix", header = TRUE, sep = '\t')
rownames(countmatrix) <- countmatrix$X
countmatrix <- countmatrix[,-1]
head(countmatrix)
```


Round integers up to hole numbers for further analysis:
```{{r}}
countmatrix <- round(countmatrix, 0)
str(countmatrix)
```

## Get DEGs based on infection 
    
```{{r}}
deseq2.colData <- data.frame(condition=factor(c(rep("control", 12), rep("desicatted", 12))), 
                             type=factor(rep("single-read", 24)))
rownames(deseq2.colData) <- colnames(data)
deseq2.dds <- DESeqDataSetFromMatrix(countData = countmatrix,
                                     colData = deseq2.colData, 
                                     design = ~ condition)
```



```{{r}}
deseq2.dds <- DESeq(deseq2.dds)
deseq2.res <- results(deseq2.dds)
deseq2.res <- deseq2.res[order(rownames(deseq2.res)), ]
```

```{{r}}
head(deseq2.res)
```

```{{r}}
# Count number of hits with adjusted p-value less then 0.05
dim(deseq2.res[!is.na(deseq2.res$padj) & deseq2.res$padj <= 0.05, ])
```


```{{r}}
tmp <- deseq2.res
# The main plot
plot(tmp$baseMean, tmp$log2FoldChange, pch=20, cex=0.45, ylim=c(-3, 3), log="x", col="darkgray",
     main="DEG Dessication  (pval <= 0.05)",
     xlab="mean of normalized counts",
     ylab="Log2 Fold Change")
# Getting the significant points and plotting them again so they're a different color
tmp.sig <- deseq2.res[!is.na(deseq2.res$padj) & deseq2.res$padj <= 0.05, ]
points(tmp.sig$baseMean, tmp.sig$log2FoldChange, pch=20, cex=0.45, col="red")
# 2 FC lines
abline(h=c(-1,1), col="blue")
```

```{{r}}
write.table(tmp.sig, "../output/DEGlist.tab", row.names = T)

```





