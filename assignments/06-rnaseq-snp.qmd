---
title: "Alignment Data"
subtitle: "SAMs and BAMs"

format:
  html:
    code-fold: false
    code-tools: true
    code-copy: true
    highlight-style: github
    code-overflow: wrap
---

# Screen Recording

[![](/img/zoom.png){fig-align="right"}](xxxxxxxxxxxx)

::: callout-important
## Assignment

Create and inspect and alignment files.
:::

# Task 1

## Download alignment data

::: callout-caution
Reminder - these are big files, be sure to ignore on commit.
:::

````         
```{{r, engine='bash'}}         
cd ../data
curl -O https://gannet.fish.washington.edu/seashell/bu-mox/scrubbed/120321-cvBS/19F_R1_val_1_bismark_bt2_pe.deduplicated.sorted.bam
curl -O https://gannet.fish.washington.edu/seashell/bu-mox/scrubbed/120321-cvBS/19F_R1_val_1_bismark_bt2_pe.deduplicated.sorted.bam.bai
```

```{{r, engine='bash'}}         
cd ../data
curl -O https://gannet.fish.washington.edu/seashell/bu-mox/data/Cvirg-genome/GCF_002022765.2_C_virginica-3.0_genomic.fa
curl -O https://gannet.fish.washington.edu/seashell/bu-mox/data/Cvirg-genome/GCF_002022765.2_C_virginica-3.0_genomic.fa.fai
```
````

## Visualize with tview

::: callout-important
Run the following in Terminal as is interactive
:::

``` bash
/home/shared/samtools-1.12/samtools tview \
../data/19F_R1_val_1_bismark_bt2_pe.deduplicated.sorted.bam \
../data/GCF_002022765.2_C_virginica-3.0_genomic.fa
```

## Capture Image

Take a screen shot of the `tview` display and place in your notebook.

# Task II

Aligning WGS data and visualizing in IGV

# SNP Discovery

In this tutorial, we'll use a small sample FASTQ file to identify SNPs from RNA-seq data. We'll use the following tools for this analysis:

1.  FastQC for quality control

2.  Trimmomatic for read trimming

3.  HISAT2 for read alignment

4.  SAMtools for processing alignments

5.  GATK for SNP calling

6.  SnpEff for SNP annotation

## **Step 1: Quality control with FastQC**

Download and install FastQC from [**https://www.bioinformatics.babraham.ac.uk/projects/fastqc/**](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/) and run it on your sample FASTQ file:

``` bash
fastqc sample.fastq
```

Examine the generated report to assess the quality of your reads.

## **Step 2: Read trimming with Trimmomatic**

Download and install Trimmomatic from [**http://www.usadellab.org/cms/?page=trimmomatic**](http://www.usadellab.org/cms/?page=trimmomatic). Trim low-quality bases and adapter sequences from your sample file:

``` ruby
java -jar trimmomatic-0.39.jar SE -phred33 sample.fastq sample_trimmed.fastq ILLUMINACLIP:TruSeq3-SE.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:36
```

## **Step 3: Align reads with HISAT2**

Build an index for your reference genome (you only need to do this once):

``` bash
hisat2-build reference_genome.fa reference_genome_index
```

Align your trimmed reads to the reference genome:

``` bash
hisat2 -x reference_genome_index -U sample_trimmed.fastq -S sample.sam
```

## **Step 4: Process alignments with SAMtools**

Download and install SAMtools from [**http://www.htslib.org/**](http://www.htslib.org/). Convert the SAM file to BAM format, sort, and index the alignments:

``` bash
samtools view -bS sample.sam > sample.bam
samtools sort sample.bam -o sample_sorted.bam
samtools index sample_sorted.bam
```

## **Step 5: SNP calling with GATK**

Download and install GATK from [**https://gatk.broadinstitute.org/hc/en-us**](https://gatk.broadinstitute.org/hc/en-us). Create a reference genome index and call SNPs using HaplotypeCaller:

``` bash
gatk CreateSequenceDictionary -R reference_genome.fa
samtools faidx reference_genome.fa
gatk --java-options "-Xmx4G" HaplotypeCaller -R reference_genome.fa -I sample_sorted.bam -O sample_raw_variants.vcf
```
